# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CreateAccount.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector
my_db = mysql.connector.connect(host="localhost",
                                user="root",
                                passwd="RunningMan7012",
                                database="ils",
                                autocommit=True)
my_cursor = my_db.cursor()

class Ui_MainWindow(object):
    def __init__(self,MainWindow):
        self.MainWindow = MainWindow
        self.setupUi(self.MainWindow)
        self.MainWindow.show()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1059, 612)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(410, 220, 231, 71))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(32)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.register_heroImage = QtWidgets.QLabel(self.centralwidget)
        self.register_heroImage.setGeometry(QtCore.QRect(0, 0, 1061, 600))
        self.register_heroImage.setStyleSheet("background-image: url(:/Assets/assets/CreatePassword.png);")
        self.register_heroImage.setText("")
        self.register_heroImage.setObjectName("register_heroImage")
        self.login_password = QtWidgets.QLineEdit(self.centralwidget)
        self.login_password.setGeometry(QtCore.QRect(410, 380, 241, 31))
        self.login_password.setStyleSheet("border-radius: 5px;\n"
"border: 1px solid white;")
        self.login_password.setAlignment(QtCore.Qt.AlignCenter)
        self.login_password.setObjectName("login_password")
        self.createAccountBtn = QtWidgets.QPushButton(self.centralwidget)
        self.createAccountBtn.setGeometry(QtCore.QRect(410, 460, 241, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.createAccountBtn.sizePolicy().hasHeightForWidth())
        self.createAccountBtn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.createAccountBtn.setFont(font)
        self.createAccountBtn.setStyleSheet("border-radius: 5px;\n"
"border: 1px solid #536DFE;\n"
"color: white;\n"
"background-color: #536DFE;\n"
"text-align: center;\n"
"padding-bottom: 4px;")
        self.createAccountBtn.setObjectName("createAccountBtn")
        self.login_email = QtWidgets.QLineEdit(self.centralwidget)
        self.login_email.setGeometry(QtCore.QRect(410, 300, 241, 31))
        self.login_email.setStyleSheet("border-radius: 5px;\n"
"border: 1px solid white;")
        self.login_email.setAlignment(QtCore.Qt.AlignCenter)
        self.login_email.setObjectName("login_email")
        self.login_username = QtWidgets.QLineEdit(self.centralwidget)
        self.login_username.setGeometry(QtCore.QRect(410, 340, 241, 31))
        self.login_username.setStyleSheet("border-radius: 5px;\n"
"border: 1px solid white;")
        self.login_username.setAlignment(QtCore.Qt.AlignCenter)
        self.login_username.setObjectName("login_username")
        self.login_confirmPassword = QtWidgets.QLineEdit(self.centralwidget)
        self.login_confirmPassword.setGeometry(QtCore.QRect(410, 420, 241, 31))
        self.login_confirmPassword.setStyleSheet("border-radius: 5px;\n"
"border: 1px solid white;")
        self.login_confirmPassword.setAlignment(QtCore.Qt.AlignCenter)
        self.login_confirmPassword.setObjectName("login_confirmPassword")
        self.register_heroImage.raise_()
        self.label_3.raise_()
        self.login_password.raise_()
        self.createAccountBtn.raise_()
        self.login_email.raise_()
        self.login_username.raise_()
        self.login_confirmPassword.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Button Assignment
        self.createAccountBtn.clicked.connect(lambda: self.createAccount())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_3.setText(_translate("MainWindow", "Register"))
        self.login_password.setPlaceholderText(_translate("MainWindow", "Enter password"))
        self.createAccountBtn.setText(_translate("MainWindow", "Create Account"))
        self.login_email.setPlaceholderText(_translate("MainWindow", "Enter email"))
        self.login_username.setPlaceholderText(_translate("MainWindow", "Enter your username"))
        self.login_confirmPassword.setPlaceholderText(_translate("MainWindow", "Confirm your password again"))

    def createAccount(self):
        if self.login_email.text() == "" or self.login_username.text() == "" or self.login_password.text() == "" or self.login_confirmPassword.text() == "":
            self.error_popup_fill_fields()
        else:
            my_cursor.execute("SELECT userId 'User ID' FROM LibraryUser WHERE userId = %s;",(self.login_email.text(),))
            rows = my_cursor.fetchall()
            if rows != []:
                self.error_popup_userid_exist()
            else:
                if self.login_password.text() != self.login_confirmPassword.text():
                    self.error_popup_password_confirm()
                else:
                    my_cursor.execute("INSERT INTO LibraryUser (userID, userName, password, isAdmin) "
                                      "VALUES (%s, %s, %s, 0);",(self.login_email.text(),self.login_username.text(),self.login_password.text()))
                    my_db.commit()
                    self.account_created_popup()
                    self.MainWindow.close()

    def error_popup_fill_fields(self):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Error")
        msg.setText("Please fill up all fields")
        msg.setIcon(QtWidgets.QMessageBox.Critical)
        msg.exec_()

    def error_popup_userid_exist(self):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Error")
        msg.setText("This email has been used, please try another email or use"
                    " forget password")
        msg.setIcon(QtWidgets.QMessageBox.Critical)
        msg.exec_()

    def error_popup_password_confirm(self):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Error")
        msg.setText("Please ensure your passwords are the same")
        msg.setIcon(QtWidgets.QMessageBox.Critical)
        msg.exec_()

    def account_created_popup(self):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Notice")
        msg.setText("Your Account has been created")
        msg.setIcon(QtWidgets.QMessageBox.Information)
        msg.exec_()
import background_image



